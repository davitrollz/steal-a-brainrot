local ts = game:GetService("TweenService")
local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear)
local lp = game.Players.LocalPlayer

local Library = loadstring(Game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()
local Window = Library:NewWindow("Credits: TGMANKASKE")
local Section = Window:NewSection("Boosts")


local savedPos = nil

Section:CreateButton("Boost Speed", function()

    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    local desiredSpeed = 48

    local function applySpeed(humanoid)
        humanoid.WalkSpeed = desiredSpeed
        humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
            if humanoid.WalkSpeed ~= desiredSpeed then
                humanoid.WalkSpeed = desiredSpeed
            end
        end)
    end

    local function onCharacterAdded(character)
        local humanoid = character:WaitForChild("Humanoid")
        applySpeed(humanoid)
    end

    if player.Character then
        onCharacterAdded(player.Character)
    end

    player.CharacterAdded:Connect(onCharacterAdded)
end)


Section:CreateButton("Boost Jump", function()



local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- ForÃ§a extra do pulo (ajustÃ¡vel)
local jumpBoostPower = 62  -- Valor maior = pulo mais forte

local boostEnabled = true

-- FunÃ§Ã£o para aplicar boost no pulo
local function onJumpRequest()
    if boostEnabled and humanoid and humanoid.Parent then
        -- Checa se estÃ¡ no chÃ£o antes de pular
        if humanoid.FloorMaterial ~= Enum.Material.Air then
            -- Aplica forÃ§a extra no pulo
            humanoid.JumpPower = jumpBoostPower
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            
            -- Restaura JumpPower para o padrÃ£o depois (0.1 seg)
            delay(0.1, function()
                if humanoid then
                    humanoid.JumpPower = 50 -- padrÃ£o Roblox Ã© 50, ajuste se necessÃ¡rio
                end
            end)
        end
    end
end

-- Conecta o evento de pulo (pode ser via UserInputService ou Humanoid)
UserInputService.JumpRequest:Connect(onJumpRequest)

-- FunÃ§Ã£o pra ligar/desligar o boost
local function setBoostEnabled(enabled)
    boostEnabled = enabled
    if not enabled and humanoid then
        humanoid.JumpPower = 50 -- volta ao normal
    end
end

end)



Section:CreateButton("Air Jump", function()

local enabled = true -- âœ… true para ativar, false para desativar o AirJump

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")

-- Impulso vertical configurÃ¡vel
local jumpForce = 62

-- Controla se o jogador estÃ¡ no ar
local isJumping = false

-- Detecta quando pular
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed or not enabled then return end
	if input.KeyCode == Enum.KeyCode.Space then
		if humanoid:GetState() == Enum.HumanoidStateType.Freefall then
			-- AirJump: aplica impulso vertical manualmente (bypass)
			hrp.Velocity = Vector3.new(hrp.Velocity.X, jumpForce, hrp.Velocity.Z)
		end
	end
end)

-- Atualiza referÃªncias apÃ³s respawn
player.CharacterAdded:Connect(function(newChar)
	character = newChar
	humanoid = newChar:WaitForChild("Humanoid")
	hrp = newChar:WaitForChild("HumanoidRootPart")
end)

end)



Section:CreateButton("Float Menu", function()


-- CONFIGURAÃ‡Ã•ES INICIAIS
local FLOAT_HEIGHT = 7
local FLOAT_SPEED = 25
local MIN_HEIGHT, MAX_HEIGHT = 2, 15
local MIN_SPEED, MAX_SPEED = 12, 50
local POSITION_FORCE = 25000
local VELOCITY_FORCE = 25000

-- SERVIÃ‡OS
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- ESTADO
local floating = false
local bodyPos, bodyVel
local floatConn
local minimized = false

-- INICIAR FLOAT
local function startFloat(char)
	local humanoid = char:WaitForChild("Humanoid")
	local hrp = char:WaitForChild("HumanoidRootPart")

	bodyPos = Instance.new("BodyPosition")
	bodyPos.Name = "TimedFloatPosition"
	bodyPos.P = 10000
	bodyPos.D = 1000
	bodyPos.MaxForce = Vector3.new(0, POSITION_FORCE, 0)
	bodyPos.Position = hrp.Position
	bodyPos.Parent = hrp

	bodyVel = Instance.new("BodyVelocity")
	bodyVel.Name = "TimedFloatVelocity"
	bodyVel.P = 1250
	bodyVel.MaxForce = Vector3.new(VELOCITY_FORCE, 0, VELOCITY_FORCE)
	bodyVel.Velocity = Vector3.zero
	bodyVel.Parent = hrp

	floatConn = RunService.Heartbeat:Connect(function()
		local rayParams = RaycastParams.new()
		rayParams.FilterDescendantsInstances = {char}
		rayParams.FilterType = Enum.RaycastFilterType.Blacklist

		local ray = workspace:Raycast(hrp.Position, Vector3.new(0, -1000, 0), rayParams)
		local targetY = hrp.Position.Y
		if ray then
			targetY = ray.Position.Y + FLOAT_HEIGHT
		end

		bodyPos.Position = Vector3.new(hrp.Position.X, targetY, hrp.Position.Z)

		local cam = workspace.CurrentCamera
		local dir = Vector3.zero
		if UserInputService:IsKeyDown(Enum.KeyCode.W) then dir += cam.CFrame.LookVector end
		if UserInputService:IsKeyDown(Enum.KeyCode.S) then dir -= cam.CFrame.LookVector end
		if UserInputService:IsKeyDown(Enum.KeyCode.A) then dir -= cam.CFrame.RightVector end
		if UserInputService:IsKeyDown(Enum.KeyCode.D) then dir += cam.CFrame.RightVector end
		dir = Vector3.new(dir.X, 0, dir.Z)
		bodyVel.Velocity = dir.Magnitude > 0 and dir.Unit * FLOAT_SPEED or Vector3.zero
	end)

	humanoid.Died:Connect(function()
		stopFloat()
	end)
end

-- PARAR FLOAT
function stopFloat()
	floating = false
	if floatConn then floatConn:Disconnect() end
	if bodyPos then bodyPos:Destroy() end
	if bodyVel then bodyVel:Destroy() end
	updateUI()
end

-- TOGGLE
function toggleFloat()
	floating = not floating
	if floating then
		if player.Character then
			startFloat(player.Character)
		end
	else
		stopFloat()
	end
	updateUI()
end

-- UI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FloatMenuUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 280, 0, 200)
frame.Position = UDim2.new(0, 100, 0, 100)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui

-- TÃTULO
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -60, 0, 30)
title.Position = UDim2.new(0, 0, 0, 0)
title.Text = "Float Menu"
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Parent = frame

-- BOTÃƒO MINIMIZAR
local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Size = UDim2.new(0, 30, 0, 30)
minimizeBtn.Position = UDim2.new(1, -60, 0, 0)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
minimizeBtn.Text = "â€“"
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.TextSize = 24
minimizeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeBtn.Parent = frame
minimizeBtn.AutoButtonColor = true

-- BOTÃƒO FECHAR
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -30, 0, 0)
closeBtn.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
closeBtn.Text = "X"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 20
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.Parent = frame
closeBtn.AutoButtonColor = true

-- CONTEÃšDO (para minimizar)
local contentItems = {}

local function addContent(child)
	table.insert(contentItems, child)
	child.Parent = frame
end

-- BOTÃƒO TOGGLE
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0.9, 0, 0, 40)
toggleBtn.Position = UDim2.new(0.05, 0, 0, 40)
toggleBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 18
toggleBtn.Text = "Float: OFF"
addContent(toggleBtn)
toggleBtn.MouseButton1Click:Connect(toggleFloat)

-- LABEL ALTURA
local heightLabel = Instance.new("TextLabel")
heightLabel.Size = UDim2.new(1, -20, 0, 20)
heightLabel.Position = UDim2.new(0, 10, 0, 90)
heightLabel.Text = "Altura: "..FLOAT_HEIGHT
heightLabel.BackgroundTransparency = 1
heightLabel.TextColor3 = Color3.new(1, 1, 1)
heightLabel.Font = Enum.Font.Gotham
heightLabel.TextSize = 16
heightLabel.TextXAlignment = Enum.TextXAlignment.Left
addContent(heightLabel)

-- SLIDER ALTURA
local heightSlider = Instance.new("TextButton")
heightSlider.Size = UDim2.new(1, -20, 0, 20)
heightSlider.Position = UDim2.new(0, 10, 0, 115)
heightSlider.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
heightSlider.AutoButtonColor = false
heightSlider.Text = ""
addContent(heightSlider)

local heightFill = Instance.new("Frame")
heightFill.Size = UDim2.new((FLOAT_HEIGHT - MIN_HEIGHT)/(MAX_HEIGHT - MIN_HEIGHT), 0, 1, 0)
heightFill.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
heightFill.Parent = heightSlider

-- LABEL VELOCIDADE
local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(1, -20, 0, 20)
speedLabel.Position = UDim2.new(0, 10, 0, 145)
speedLabel.Text = "Velocidade: "..FLOAT_SPEED
speedLabel.BackgroundTransparency = 1
speedLabel.TextColor3 = Color3.new(1, 1, 1)
speedLabel.Font = Enum.Font.Gotham
speedLabel.TextSize = 16
speedLabel.TextXAlignment = Enum.TextXAlignment.Left
addContent(speedLabel)

-- SLIDER VELOCIDADE
local speedSlider = Instance.new("TextButton")
speedSlider.Size = UDim2.new(1, -20, 0, 20)
speedSlider.Position = UDim2.new(0, 10, 0, 170)
speedSlider.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
speedSlider.AutoButtonColor = false
speedSlider.Text = ""
addContent(speedSlider)

local speedFill = Instance.new("Frame")
speedFill.Size = UDim2.new((FLOAT_SPEED - MIN_SPEED)/(MAX_SPEED - MIN_SPEED), 0, 1, 0)
speedFill.BackgroundColor3 = Color3.fromRGB(0, 255, 100)
speedFill.Parent = speedSlider

-- FUNÃ‡ÃƒO PARA INTERPOLAR COR ENTRE VERMELHO E ROXO
local function interpolateColor(pct)
	if pct < 0.5 then
		-- Do comeÃ§o atÃ© meio: transiÃ§Ã£o para vermelho
		local t = pct / 0.5
		return Color3.new(t, 0, 0) -- do preto (0,0,0) para vermelho (1,0,0)
	else
		-- Do meio atÃ© fim: transiÃ§Ã£o para roxo (128,0,128)
		local t = (pct - 0.5) / 0.5
		return Color3.new(1 - 0.5*t, 0, 0 + 0.5*t) -- do vermelho (1,0,0) para roxo (0.5,0,0.5)
	end
end

-- FUNÃ‡Ã•ES SLIDER
local draggingHeight, draggingSpeed = false, false

heightSlider.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then draggingHeight = true end
end)
heightSlider.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then draggingHeight = false end
end)

speedSlider.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then draggingSpeed = true end
end)
speedSlider.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then draggingSpeed = false end
end)

RunService.RenderStepped:Connect(function()
	if draggingHeight then
		local mouse = UserInputService:GetMouseLocation().X
		local x = math.clamp(mouse - heightSlider.AbsolutePosition.X, 0, heightSlider.AbsoluteSize.X)
		local pct = x / heightSlider.AbsoluteSize.X
		FLOAT_HEIGHT = math.floor(MIN_HEIGHT + pct * (MAX_HEIGHT - MIN_HEIGHT))
		heightLabel.Text = "Altura: "..FLOAT_HEIGHT
		heightFill.Size = UDim2.new(pct, 0, 1, 0)
		heightFill.BackgroundColor3 = interpolateColor(pct)
	end
	if draggingSpeed then
		local mouse = UserInputService:GetMouseLocation().X
		local x = math.clamp(mouse - speedSlider.AbsolutePosition.X, 0, speedSlider.AbsoluteSize.X)
		local pct = x / speedSlider.AbsoluteSize.X
		FLOAT_SPEED = math.floor(MIN_SPEED + pct * (MAX_SPEED - MIN_SPEED))
		speedLabel.Text = "Velocidade: "..FLOAT_SPEED
		speedFill.Size = UDim2.new(pct, 0, 1, 0)
		speedFill.BackgroundColor3 = interpolateColor(pct)
	end
end)

-- ATUALIZA UI
function updateUI()
	toggleBtn.Text = floating and "Float: ON" or "Float: OFF"
	toggleBtn.BackgroundColor3 = floating and Color3.fromRGB(0, 170, 255) or Color3.fromRGB(60, 60, 60)
end

-- MINIMIZAR/RESTORE
minimizeBtn.MouseButton1Click:Connect(function()
	minimized = not minimized
	if minimized then
		for _, child in pairs(contentItems) do
			local tween = TweenService:Create(child, TweenInfo.new(0.3), {BackgroundTransparency = 1, TextTransparency = 1})
			tween:Play()
			tween.Completed:Connect(function()
				child.Visible = false
			end)
		end
		local tweenSize = TweenService:Create(frame, TweenInfo.new(0.3), {Size = UDim2.new(frame.Size.X.Scale, frame.Size.X.Offset, 0, 30)})
		tweenSize:Play()
	else
		for _, child in pairs(contentItems) do
			child.Visible = true
			local tween = TweenService:Create(child, TweenInfo.new(0.3), {BackgroundTransparency = 0, TextTransparency = 0})
			tween:Play()
		end
		local tweenSize = TweenService:Create(frame, TweenInfo.new(0.3), {Size = UDim2.new(0, 280, 0, 200)})
		tweenSize:Play()
	end
end)

-- GUARDA CONEXÃƒO DA TECLA F PARA DESABILITAR DEPOIS
local toggleKeyConn = UserInputService.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == Enum.KeyCode.F then
		toggleFloat()
	end
end)

-- BOTÃƒO FECHAR (X) - PARA FLOAT, DESABILITA BIND E REMOVE GUI
closeBtn.MouseButton1Click:Connect(function()
	if floating then
		stopFloat()
	end
	draggingHeight = false
	draggingSpeed = false
	if floatConn then
		floatConn:Disconnect()
		floatConn = nil
	end
	if toggleKeyConn then
		toggleKeyConn:Disconnect()
		toggleKeyConn = nil
	end
	local tween = TweenService:Create(frame, TweenInfo.new(0.3), {BackgroundTransparency = 1})
	tween:Play()
	tween.Completed:Connect(function()
		screenGui:Destroy()
	end)
end)

-- TECLA DE ATALHO (F)
-- (foi movido pra variÃ¡vel toggleKeyConn para poder desconectar)

-- RESPAWN
player.CharacterAdded:Connect(function(char)
	char:WaitForChild("HumanoidRootPart")
	wait(0.2)
	if floating then
		startFloat(char)
	end
end)

-- Atualiza a UI inicial
updateUI()



end)



Section:CreateButton("Fly Menu", function()

-- [SERVICES]
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local flying = false
local flySpeed = 50
local minSpeed, maxSpeed = 10, 200

local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- [BODYVELOCITY SETUP]
local bodyVelocity = Instance.new("BodyVelocity")
bodyVelocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
bodyVelocity.Velocity = Vector3.new(0, 0, 0)

-- [GUI BASE]
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FlyMenuGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 260, 0, 160)
frame.Position = UDim2.new(0.5, -130, 0.5, -80)
frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
frame.BorderSizePixel = 0
frame.Parent = screenGui
frame.Active = true
frame.Selectable = true

local draggingFrame = false
local dragStartPos
local frameStartPos

-- [TÃTULO COM ARCO-ÃRIS]
local title = Instance.new("TextLabel")
title.Text = ".gg/esYJzYnsfC"
title.Size = UDim2.new(1, -80, 0, 30)
title.Position = UDim2.new(0, 10, 0, 0)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.TextSize = 19
title.TextXAlignment = Enum.TextXAlignment.Left
title.TextYAlignment = Enum.TextYAlignment.Center
title.Parent = frame

-- [BOTÃƒO DE MINIMIZAR]
local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Size = UDim2.new(0, 30, 0, 30)
minimizeBtn.Position = UDim2.new(1, -70, 0, 0)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
minimizeBtn.TextColor3 = Color3.new(1, 1, 1)
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.TextSize = 24
minimizeBtn.Text = "â€“"
minimizeBtn.Parent = frame

-- [BOTÃƒO DE FECHAR]
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -35, 0, 0)
closeBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 24
closeBtn.Text = "X"
closeBtn.Parent = frame

-- [ÃREA DE CONTEÃšDO]
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, 0, 1, -30)
contentFrame.Position = UDim2.new(0, 0, 0, 30)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = frame

-- [BOTÃƒO FLY ON/OFF]
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0.9, 0, 0, 45)
toggleBtn.Position = UDim2.new(0.05, 0, 0, 10)
toggleBtn.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.Gotham
toggleBtn.TextSize = 20
toggleBtn.Text = "Fly: OFF"
toggleBtn.Parent = contentFrame

-- [VELOCIDADE]
local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(1, 0, 0, 25)
speedLabel.Position = UDim2.new(0, 0, 0, 65)
speedLabel.BackgroundTransparency = 1
speedLabel.TextColor3 = Color3.new(1, 1, 1)
speedLabel.Font = Enum.Font.Gotham
speedLabel.TextSize = 18
speedLabel.Text = "Speed: "..flySpeed
speedLabel.Parent = contentFrame

-- [SLIDER]
local sliderBg = Instance.new("Frame")
sliderBg.Size = UDim2.new(0.9, 0, 0, 20)
sliderBg.Position = UDim2.new(0.05, 0, 0, 95)
sliderBg.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
sliderBg.Parent = contentFrame

local sliderFill = Instance.new("Frame")
sliderFill.Size = UDim2.new((flySpeed - minSpeed)/(maxSpeed - minSpeed), 0, 1, 0)
sliderFill.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
sliderFill.Parent = sliderBg

-- [ANIMAÃ‡Ã•ES DE COR DO SLIDER]
local draggingSlider = false

local function getColorForSpeed(speed)
	local t = (speed - minSpeed) / (maxSpeed - minSpeed)
	local localT
	if t <= 0.5 then
		localT = t / 0.5
		return Color3.new(0 + 1*localT, 1 - 1*localT, 0)
	else
		localT = (t - 0.5) / 0.5
		return Color3.new(1 - 0.3*localT, 0, 0.3*localT)
	end
end

local function updateSliderAnimated(speed)
	speed = math.clamp(speed, minSpeed, maxSpeed)
	local percent = (speed - minSpeed) / (maxSpeed - minSpeed)
	local color = getColorForSpeed(speed)
	speedLabel.Text = "Speed: "..speed

	TweenService:Create(sliderFill, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
		Size = UDim2.new(percent, 0, 1, 0),
		BackgroundColor3 = color
	}):Play()
end

-- Inicializa slider com valor atual
updateSliderAnimated(flySpeed)

-- Slider controle
sliderBg.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		draggingSlider = true
	end
end)
sliderBg.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		draggingSlider = false
	end
end)
sliderBg.InputChanged:Connect(function(input)
	if draggingSlider and input.UserInputType == Enum.UserInputType.MouseMovement then
		local relativeX = math.clamp(input.Position.X - sliderBg.AbsolutePosition.X, 0, sliderBg.AbsoluteSize.X)
		local percent = relativeX / sliderBg.AbsoluteSize.X
		flySpeed = math.floor(percent * (maxSpeed - minSpeed)) + minSpeed
		updateSliderAnimated(flySpeed)
	end
end)

-- Arrastar frame
frame.InputBegan:Connec
